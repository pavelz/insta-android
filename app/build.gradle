apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion 34
    buildFeatures{
        dataBinding = true
    }
    defaultConfig {
        applicationId "com.example.insta_android"
        minSdkVersion 32
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '21'
    }
    namespace 'com.example.insta_android'
}

ext {
    querydslVersion = "4.1.4"
}
repositories {
    jcenter()
}
dependencies {
    annotationProcessor "com.querydsl:querydsl-apt:$querydslVersion:jpa"
    implementation "com.querydsl:querydsl-jpa:$querydslVersion"
    implementation "com.querydsl:querydsl-sql:$querydslVersion"
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // implementation 'com.facebook.conceal:conceal:2.0.1@aar'
    implementation "com.squareup.moshi:moshi:1.8.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    implementation 'org.apache.directory.studio:org.apache.commons.io:2.4'
    implementation 'com.squareup.picasso:picasso:2.71828'

        
    // Room stuff
    def room_version = "2.6.1"


// Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    implementation "androidx.room:room-runtime:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    def paging_version = "2.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-common:$paging_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use paging-rxjava2-ktx

    // LiveData
    def lifecycle_version = "2.1.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version" // For Kotlin use lifecycle-viewmodel-ktx
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version" // For Kotlin use lifecycle-reactivestreams-ktx

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"


    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

// Extensions = ViewModel + LiveData
    implementation "android.arch.lifecycle:extensions:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
// Room
    implementation "android.arch.persistence.room:runtime:1.1.1"

    debugImplementation 'com.facebook.flipper:flipper:0.238.0'
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'

    releaseImplementation 'com.facebook.flipper:flipper-noop:0.61.0'
}
